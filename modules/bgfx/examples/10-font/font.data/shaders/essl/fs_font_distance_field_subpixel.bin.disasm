varying highp vec4 v_color0;
varying highp vec4 v_texcoord0;
uniform lowp samplerCube s_texColor;
void main ()
{
  highp int tmpvar_1;
  tmpvar_1 = int(((v_texcoord0.w * 4.0) + 0.5));
  highp vec3 tmpvar_2;
  tmpvar_2 = dFdx(v_texcoord0.xyz);
  highp vec3 tmpvar_3;
  tmpvar_3 = dFdy(v_texcoord0.xyz);
  highp vec3 tmpvar_4;
  tmpvar_4 = (0.166667 * tmpvar_2);
  lowp float tmpvar_5;
  tmpvar_5 = textureCube (s_texColor, (v_texcoord0.xyz - tmpvar_4)).zyxw[tmpvar_1];
  lowp float tmpvar_6;
  tmpvar_6 = textureCube (s_texColor, (v_texcoord0.xyz + tmpvar_4)).zyxw[tmpvar_1];
  lowp float tmpvar_7;
  tmpvar_7 = (0.5 * (tmpvar_5 + tmpvar_6));
  highp float tmpvar_8;
  tmpvar_8 = (8.0 * (sqrt(
    dot (tmpvar_2, tmpvar_2)
  ) + sqrt(
    dot (tmpvar_3, tmpvar_3)
  )));
  lowp vec3 tmpvar_9;
  tmpvar_9.x = tmpvar_5;
  tmpvar_9.y = tmpvar_7;
  tmpvar_9.z = tmpvar_6;
  lowp vec3 tmpvar_10;
  highp float edge0_11;
  edge0_11 = (0.5 - tmpvar_8);
  lowp vec3 tmpvar_12;
  tmpvar_12 = clamp (((tmpvar_9 - edge0_11) / (
    (0.5 + tmpvar_8)
   - edge0_11)), 0.0, 1.0);
  tmpvar_10 = (tmpvar_12 * (tmpvar_12 * (3.0 - 
    (2.0 * tmpvar_12)
  )));
  gl_FragColor.xyz = (tmpvar_10 * v_color0.w);
  gl_FragColor.w = (tmpvar_7 * v_color0.w);
}

